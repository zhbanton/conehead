Find API's

  programmableweb.com
  rubygems.org
  -look for lists of gems
  -tom will send some out

-start thinking about prep aspects
-Matt will send out rubric and past projects


wireframes- draw our your website


Base crud app:

User has many recipes, Recipe has many ingredients, recipes can have many recipes- see http://stackoverflow.com/questions/5109893/rails-how-do-self-referential-has-many-models-work as well as active record associations section on self joins

If doing sandwiches and sundays, create classes for each-

User log-in- for now use base
-User can store, edit, view, delete recipes
  -new recipe will be an embedded form- see link for note on nested form fors(https://coderwall.com/p/qwx3qa)
  -will need to add javascript

Inventory section:


  Definitely:
    Finshed Product Inventory- How much ic is left over- form is based on yesterdays's desired output form
    Desired Output- based on yesterdays desired output- could put together weekly schedule in advance
    Amount needed for next day's production
      employee goes through inventory and checks if product is there

  Maybe:
    Finished Product Inventory - every day
    Raw Ingredient Inventory
    Desired Output- every day (could have templates)
    Amount needed for actual next day's production- (Desired Output - Raw Ingredient Inventory - would be good to match up in actual quantities purchased in *
    Actual Order Form
      raw ingredient inventory is updated dynamically (actual order forms are added, desired outputs are subtracted)- user has the option to go through backend inventory and update it- requires conversions

Create current menu?


questions:

-how to deal with changes in mass/volume from recipes due to overrun/water loss
-make a separate ice cream object to deal with overrun?
-make base recipes?, subcomponents? dishes involving ice cream? (sundaes, sandwiches?)
-recommended fill ins? use past user ingredients/usda stuff/both?
-how to determine if something is a 'final' recipe?

Lingering Concerns:
  -creating an entry without a quantity deletes entry and creates recipe without throwing an error- look at allow_destroy: true- look into :_destroy param in cocoon documentatino
  -dont want user to be able to create a new recipe with 0 entries?
  -formatting after errors- retry to get specifics
  -can I make it so a few ingredient lines are already present?
  -preserve line breaks in db- see simple_format(my_text)
  -think about automatically doing case- capitalizing recipe names, lowercasing all ingredients
  -format quantities to remove .0



-add total yield to recipes
  -optional- will be set to sum of ingredients if null

-callbacks

ProductionScheudle(round)
ProductionSchedule(day)
RequiredRawMaterialsList
RawMaterialInventory
OrderSheet
EndOfDayProductInventory
BeginningOfDayProductInventory


ProductionSchedule- everything you want to produce for a given week/round of production
  -will yield a RequiredRawMaterialsList- everything you need for a production round
  ProductionDaySchedule- everything you plan to produce on a given day- will include bases and churns- interspersed between two production rounds

Raw MaterialsInventory- once every round- raw materials you have in back of house
OrderSheet- once every round- what you actually order from the vendor

EndOfDayProductInventory- daily by employee- what you have at the end of the day
BeginningOfDayProductInventory- what you have at beginning of day


-finish crud stuff
-add validations (revisit recipe validations)
-add recommended output



-fix validations
-downcase/autoformat input
-preserve line breaks in notes

STYLING
-watch bootstrap tutorial
-create nav bar
-sexy up

DEPLOY TO HEROKU

CREATE NEW ProductionPeriod MODEL- add validation from production schedule- no edit or update

Date.today.at_beginning_of_week # returns monday of that week
